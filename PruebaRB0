;Se prueba la interrupción por RB0, haciendo que un led encienda y apague por 1 segundos.
LIST    p=16f887
        #include "p16f887.inc"
        ; Configuración de bits:
        ; - _INTRC_OSC_NOCLKOUT: Usa el oscilador interno sin salida de clock.
        ; - _WDT_OFF: Watchdog Timer desactivado.
        ; - _PWRTE_ON: Power-up Timer activado.
        ; - _MCLRE_ON: Habilita el pin MCLR como entrada de reset.
        ; - _CP_OFF y _CPD_OFF: Protección de código y datos desactivada.
        ; - _IESO_OFF: Oscilador interno/externo deshabilitado.
        ; - _FCMEN_OFF: Fail Safe Clock Monitor desactivado.
        ; - _LVP_OFF: Low Voltage Programming desactivado.
        __CONFIG _CONFIG1, _INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_ON & _MCLRE_ON & _CP_OFF & _CPD_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
        ; En CONFIG2 configuramos:
        ; - _BOR21V: Brown-out Reset a 2.1V, adecuado para una fuente estable de 5V.
        ; - _WRT_OFF: Protección contra escritura desactivada.
        __CONFIG _CONFIG2, _WRT_OFF & _BOR21V
;************************ VARIABLES ****************
	FLAG_1S EQU 0x70
 	;************************
	ORG 0x00		 
	GOTO CONFIGURACION
	;Organización de la Rutina de Servicio a la Interrupción
	ORG 0x04
	GOTO ISR

CONFIGURACION
    BANKSEL ANSELH
    CLRF    ANSELH	    ; Seleccion de puertos Digitales y Analogicos
    MOVLW   b'10010000'	    ;Habilito interrupciones globales y por RB0
    MOVWF   INTCON
    MOVLW   b'10000111'	    ;Pull-up desact. ;Flanco de bajada y TMR0 en 256. Quiero cargar .61 para 50ms
    MOVWF   OPTION_REG
    BSF	    TRISB, RB0	    ;RB0 como entrada para un botón(Interrupción)
    BCF	    TRISB, RB1	    ;RB1 como salida (LED que prenderá por 1 segundo con el TMR1)
    BANKSEL PORTA
    CLRF    PORTB
    CLRF    FLAG_1S
START 
    GOTO    START
ISR
    BTFSS   INTCON, INTF
    RETFIE
    BCF	    INTCON, INTF
    CALL    CONTAR_50MS	    ;Antirrebote
L1
    BSF	    PORTB, RB1
    CALL    CONTAR_1S
    BCF	    PORTB, RB1
    CALL    CONTAR_1S
    GOTO    L1
            
CONTAR_50MS
    MOVLW   .61
    MOVWF   TMR0
L2
    BTFSS   INTCON, T0IF
    GOTO    L2
    BCF	    INTCON, T0IF
    RETURN
    
CONTAR_1S   ;Debo contar 20 veces para hacer 1 segundo, es decir, FLAG_1S debe ser de 20 para volver
    CLRF    FLAG_1S
L3
    MOVLW   .61
    MOVWF   TMR0
L4
    BTFSS   INTCON, T0IF
    GOTO    L4
    BCF	    INTCON, T0IF
    INCF    FLAG_1S
    MOVLW   .20
    SUBWF   FLAG_1S, W
    BTFSC   STATUS, Z	;Si Z=1 significa que FLAG_1S ya llegó a 20.
    RETURN
    GOTO    L3
END
